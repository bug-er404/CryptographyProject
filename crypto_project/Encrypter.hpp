/**
*  Encrypter.hpp
*  Encrypter Class header file.
*  Runs the encryption algorithm on a file.
*
*
*  Created by Salil D. Maharjan on 10/10/19.
*  Copyright Â© 2019 Salil Maharjan. All rights reserved.
*/

#pragma once
#include "PrefixHeader.pch"


class Encrypter
{
private:
    /**
    * Variable to hold the key used for encryption purposes.
    */
    string m_key;
    
    /**
    * Variable to hold the message to encrypt.
    */
    string m_message;
    
    /**
    * Method to read message from the file for encryption.
    */
    void readMessage(string a_fileName);
    
    /**
    * Method to write encrypted binary text to a file.
    */
    void writeEncryption(vector<bitset<8>> a_encryption);
    
    /**
    * Method to encrypt using vigenere cipher.
    */
    string vigenereCipher(string a_message, int b_key, int e_key);
    
    /**
    * Method to substitute by using the s-box
    */
    string sBoxSubstitution(string a_message);
    
    /**
    *  Method to permute by using the p-box
    */
    string pboxPermutaation(string a_message);
    
    /**
    *  Method to encrypt using Caesar's cipher.
    */
    string caesarCipher(string a_message);
    
    /**
    * Method to encrypt by custom 5 block Feistel style cipher.
    */
    vector<bitset<8>> fiveBlockFeistel(string a_message);
    
    /**
    * Method to generate a random alpha numeric string of length 'size'.
    */
    string randomStringGenerator(int size);
    
    /**
    * Method to generate a random key for encryption.
    */
    void generateKey();
    
public:
    // *********************************************************
    // ************** Default Constructor **********************
    // *********************************************************
    Encrypter();
    // *********************************************************
    // ************** Default Destructor ***********************
    // *********************************************************
    ~Encrypter();

    /**
    * Method to encrypt file.
    */
    void EncryptFile(string a_fileName);
    
    /**
    * S-BOX that holds substitution for the printable ascii table according to ascii value:
    */
    const int m_s_box [95] = {46,102,68,115,124,103,72,81,116,39,44,83,93,59,36,50,104,106,34,77,56,79,35,110,45,101,32,91,41,114,48,53,63,71,100,82,96,47,78,98,92,75,105,60,111,37,80,52,109,97,120,33,112,43,108,87,54,58,62,125,107,70,40,69,51,86,49,113,117,85,67,90,119,65,89,42,55,84,99,64,123,73,118,38,61,121,76,66,95,122,94,57,126,74,88};
   
};


// *********************************************************
// ************** Trash Methods **********************
// *********************************************************

// MAKING CUSTOM RANDOM S-BOX
//     SHUFFLING ASCII VALUE:
    
//    vector<int> nums;
//
//    int j = 32;
//    for (int i=0;i<95;i++, j++)
//        nums.push_back(j);
//
//    auto rng = std::default_random_engine {};
//    std::shuffle(std::begin(nums), std::end(nums), rng);
//
//    for (int i=0;i<95;i++)
//        cout<<nums[i]<<",";
//
// const map <int, int> m_s_box =
//    {   {    0    ,    142    },
//        {    1    ,    226    },
//        {    2    ,    71    },
//        {    3    ,    127    },
//        {    4    ,    244    },
//        {    5    ,    39    },
//        {    6    ,    86    },
//        {    7    ,    95    },
//        {    8    ,    202    },
//        {    9    ,    135    },
//        {    10    ,    44    },
//        {    11    ,    121    },
//        {    12    ,    182    },
//        {    13    ,    89    },
//        {    14    ,    12    },
//        {    15    ,    17    },
//        {    16    ,    56    },
//        {    17    ,    66    },
//        {    18    ,    160    },
//        {    19    ,    225    },
//        {    20    ,    247    },
//        {    21    ,    117    },
//        {    22    ,    153    },
//        {    23    ,    109    },
//        {    24    ,    208    },
//        {    25    ,    108    },
//        {    26    ,    83    },
//        {    27    ,    0    },
//        {    28    ,    174    },
//        {    29    ,    55    },
//        {    30    ,    162    },
//        {    31    ,    242    },
//        {    32    ,    186    },
//        {    33    ,    222    },
//        {    34    ,    13    },
//        {    35    ,    249    },
//        {    36    ,    5    },
//        {    37    ,    81    },
//        {    38    ,    232    },
//        {    39    ,    199    },
//        {    40    ,    189    },
//        {    41    ,    33    },
//        {    42    ,    84    },
//        {    43    ,    59    },
//        {    44    ,    251    },
//        {    45    ,    51    },
//        {    46    ,    24    },
//        {    47    ,    190    },
//        {    48    ,    204    },
//        {    49    ,    57    },
//        {    50    ,    70    },
//        {    51    ,    53    },
//        {    52    ,    32    },
//        {    53    ,    216    },
//        {    54    ,    144    },
//        {    55    ,    185    },
//        {    56    ,    196    },
//        {    57    ,    223    },
//        {    58    ,    205    },
//        {    59    ,    215    },
//        {    60    ,    77    },
//        {    61    ,    147    },
//        {    62    ,    47    },
//        {    63    ,    154    },
//        {    64    ,    171    },
//        {    65    ,    164    },
//        {    66    ,    80    },
//        {    67    ,    191    },
//        {    68    ,    179    },
//        {    69    ,    103    },
//        {    70    ,    213    },
//        {    71    ,    16    },
//        {    72    ,    45    },
//        {    73    ,    8    },
//        {    74    ,    85    },
//        {    75    ,    211    },
//        {    76    ,    63    },
//        {    77    ,    238    },
//        {    78    ,    224    },
//        {    79    ,    126    },
//        {    80    ,    201    },
//        {    81    ,    15    },
//        {    82    ,    38    },
//        {    83    ,    104    },
//        {    84    ,    68    },
//        {    85    ,    119    },
//        {    86    ,    120    },
//        {    87    ,    105    },
//        {    88    ,    180    },
//        {    89    ,    188    },
//        {    90    ,    26    },
//        {    91    ,    123    },
//        {    92    ,    54    },
//        {    93    ,    87    },
//        {    94    ,    128    },
//        {    95    ,    173    },
//        {    96    ,    27    },
//        {    97    ,    181    },
//        {    98    ,    11    },
//        {    99    ,    58    },
//        {    100    ,    125    },
//        {    101    ,    14    },
//        {    102    ,    241    },
//        {    103    ,    149    },
//        {    104    ,    49    },
//        {    105    ,    10    },
//        {    106    ,    197    },
//        {    107    ,    206    },
//        {    108    ,    90    },
//        {    109    ,    237    },
//        {    110    ,    230    },
//        {    111    ,    72    },
//        {    112    ,    115    },
//        {    113    ,    75    },
//        {    114    ,    132    },
//        {    115    ,    228    },
//        {    116    ,    106    },
//        {    117    ,    254    },
//        {    118    ,    243    },
//        {    119    ,    250    },
//        {    120    ,    101    },
//        {    121    ,    219    },
//        {    122    ,    2    },
//        {    123    ,    248    },
//        {    124    ,    60    },
//        {    125    ,    255    },
//        {    126    ,    158    },
//        {    127    ,    79    },
//        {    128    ,    150    },
//        {    129    ,    93    },
//        {    130    ,    118    },
//        {    131    ,    165    },
//        {    132    ,    231    },
//        {    133    ,    69    },
//        {    134    ,    212    },
//        {    135    ,    163    },
//        {    136    ,    31    },
//        {    137    ,    37    },
//        {    138    ,    34    },
//        {    139    ,    227    },
//        {    140    ,    65    },
//        {    141    ,    46    },
//        {    142    ,    140    },
//        {    143    ,    169    },
//        {    144    ,    4    },
//        {    145    ,    124    },
//        {    146    ,    110    },
//        {    147    ,    234    },
//        {    148    ,    175    },
//        {    149    ,    111    },
//        {    150    ,    78    },
//        {    151    ,    177    },
//        {    152    ,    157    },
//        {    153    ,    41    },
//        {    154    ,    187    },
//        {    155    ,    209    },
//        {    156    ,    40    },
//        {    157    ,    19    },
//        {    158    ,    62    },
//        {    159    ,    76    },
//        {    160    ,    42    },
//        {    161    ,    200    },
//        {    162    ,    64    },
//        {    163    ,    195    },
//        {    164    ,    193    },
//        {    165    ,    178    },
//        {    166    ,    214    },
//        {    167    ,    82    },
//        {    168    ,    146    },
//        {    169    ,    48    },
//        {    170    ,    30    },
//        {    171    ,    6    },
//        {    172    ,    20    },
//        {    173    ,    97    },
//        {    174    ,    156    },
//        {    175    ,    43    },
//        {    176    ,    7    },
//        {    177    ,    74    },
//        {    178    ,    240    },
//        {    179    ,    25    },
//        {    180    ,    107    },
//        {    181    ,    137    },
//        {    182    ,    50    },
//        {    183    ,    98    },
//        {    184    ,    198    },
//        {    185    ,    99    },
//        {    186    ,    221    },
//        {    187    ,    67    },
//        {    188    ,    148    },
//        {    189    ,    36    },
//        {    190    ,    3    },
//        {    191    ,    133    },
//        {    192    ,    252    },
//        {    193    ,    176    },
//        {    194    ,    220    },
//        {    195    ,    152    },
//        {    196    ,    210    },
//        {    197    ,    136    },
//        {    198    ,    246    },
//        {    199    ,    102    },
//        {    200    ,    129    },
//        {    201    ,    236    },
//        {    202    ,    168    },
//        {    203    ,    100    },
//        {    204    ,    218    },
//        {    205    ,    145    },
//        {    206    ,    114    },
//        {    207    ,    23    },
//        {    208    ,    116    },
//        {    209    ,    122    },
//        {    210    ,    21    },
//        {    211    ,    233    },
//        {    212    ,    73    },
//        {    213    ,    253    },
//        {    214    ,    52    },
//        {    215    ,    141    },
//        {    216    ,    217    },
//        {    217    ,    139    },
//        {    218    ,    61    },
//        {    219    ,    113    },
//        {    220    ,    161    },
//        {    221    ,    9    },
//        {    222    ,    183    },
//        {    223    ,    166    },
//        {    224    ,    167    },
//        {    225    ,    88    },
//        {    226    ,    138    },
//        {    227    ,    172    },
//        {    228    ,    192    },
//        {    229    ,    170    },
//        {    230    ,    151    },
//        {    231    ,    29    },
//        {    232    ,    184    },
//        {    233    ,    94    },
//        {    234    ,    96    },
//        {    235    ,    131    },
//        {    236    ,    194    },
//        {    237    ,    143    },
//        {    238    ,    229    },
//        {    239    ,    155    },
//        {    240    ,    112    },
//        {    241    ,    134    },
//        {    242    ,    35    },
//        {    243    ,    239    },
//        {    244    ,    130    },
//        {    245    ,    91    },
//        {    246    ,    207    },
//        {    247    ,    203    },
//        {    248    ,    159    },
//        {    249    ,    28    },
//        {    250    ,    235    },
//        {    251    ,    22    },
//        {    252    ,    1    },
//        {    253    ,    18    },
//        {    254    ,    245    },
//        {    255    ,    92    },   };
    
